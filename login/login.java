package login;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.math.BigInteger;
import java.security.MessageDigest;
import java.security.NoSuchAlgorithmException;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.awt.*;
import javax.swing.*;
import javax.swing.border.EmptyBorder;

import server.serverGUI;

@SuppressWarnings("serial")
public class login extends JFrame implements ActionListener{
	private static String DB_URL = "jdbc:mysql://localhost:3306/appchat?useSSL=false";
    private static String USER_NAME = "root";
    private static String PASSWORD = "1234";
	private JPanel contentPane;
	private JTextField txtuser;
	private JPasswordField txtpass;
//	private String logPW; 
//	private String logID;
	ResultSet rs;
	public static void main(String[] args) {
		EventQueue.invokeLater(new Runnable() {
			public void run() {
				try {
					login frame = new login();
					frame.setVisible(true);
				} catch (Exception e) {
					e.printStackTrace();
				}
			}
		});
	}

	public login () {
		Connection conn = null;
        Statement stmt = null;
		try {
            // connnect to database 'testdb'
			conn = getConnection(DB_URL, USER_NAME, PASSWORD);
            // crate statement
            stmt = conn.createStatement();
            String sql = "SELECT * FROM login";
            // get data from table 'student'
            rs = stmt.executeQuery(sql);
           // show data
//            while (rs.next()) {
//                System.out.println(rs.getString(1) 
//                        + "  " + rs.getString(2));
//            }
//            // close connection
//            conn.close();
        } catch (Exception ex) {
            ex.printStackTrace();
        }
		setTitle("Login");
		setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
		setBounds(100, 100, 747, 380);
		contentPane = new JPanel();
		contentPane.setBorder(new EmptyBorder(5, 5, 5, 5));
		setContentPane(contentPane);
		contentPane.setLayout(null);
		this.setResizable(false);
		this.setLocationRelativeTo(null);
		
		JLabel lblogin = new JLabel("Đăng nhập");
		lblogin.setFont(new Font("Tahoma", Font.BOLD, 30));
		lblogin.setBounds(330, 55, 184, 37);
		contentPane.add(lblogin);
		
		JLabel username = new JLabel("Username :");
		username.setFont(new Font("Tahoma", Font.BOLD, 20));
		username.setBounds(102, 117, 131, 37);
		contentPane.add(username);
		
		txtuser = new JTextField();
		txtuser.setFont(new Font("Tahoma", Font.BOLD, 15));
		txtuser.setBounds(227, 124, 445, 30);
		contentPane.add(txtuser);
		txtuser.setColumns(10);
		
		JLabel imguser = new JLabel("");
		imguser.setIcon(new ImageIcon("C:\\Users\\Administrator\\Downloads\\DoAnChat\\DoAnChat\\image\\user (3).png"));
		imguser.setBounds(32, 102, 69, 64);
		contentPane.add(imguser);
		
		txtpass = new JPasswordField();
		txtpass.setFont(new Font("Tahoma", Font.BOLD, 15));
		txtpass.setBounds(227, 205, 445, 30);
		contentPane.add(txtpass);
		
		JLabel imgkeypass = new JLabel("");
		imgkeypass.setIcon(new ImageIcon("C:\\Users\\Administrator\\Downloads\\DoAnChat\\DoAnChat\\image\\lock (1).png"));
		imgkeypass.setBounds(32, 187, 55, 57);
		contentPane.add(imgkeypass);
		
		JButton btnCancel = new JButton("Cancel");
		btnCancel.setBackground(Color.YELLOW);
		btnCancel.setIcon(new ImageIcon("C:\\Users\\Administrator\\Downloads\\DoAnChat\\DoAnChat\\image\\close.png"));
		btnCancel.setFont(new Font("Tahoma", Font.BOLD, 20));
		btnCancel.setBounds(102, 289, 153, 43);
		btnCancel.addActionListener(this);
		contentPane.add(btnCancel);
		
		JCheckBox chboxhienthi = new JCheckBox("Hiển thị mật khẩu");
		chboxhienthi.setFont(new Font("Tahoma", Font.PLAIN, 15));
		chboxhienthi.setBounds(159, 251, 141, 23);
		contentPane.add(chboxhienthi);
		chboxhienthi.addActionListener(new ActionListener() {
			
			@Override
			public void actionPerformed(ActionEvent e) {
				// TODO Auto-generated method stub
				if (chboxhienthi.isSelected()) {
					txtpass.setEchoChar((char) 0);
					System.out.println("Your Password generated by MD5 is: " + getMd5(txtpass));
					txtpass.setText(getMd5(txtpass));
				} else {
					txtpass.setEchoChar('*');
				}
				
			}
				
		});
		
		JButton btnlogin = new JButton("Login");
		btnlogin.setForeground(Color.BLACK);
		btnlogin.setBackground(Color.GREEN);
		btnlogin.setIcon(new ImageIcon("C:\\Users\\Administrator\\Downloads\\DoAnChat\\DoAnChat\\image\\login.png"));
		btnlogin.setFont(new Font("Tahoma", Font.BOLD, 20));
		btnlogin.setBounds(541, 289, 131, 43);
		btnlogin.addActionListener(this);
		contentPane.add(btnlogin);
		
		JButton btndangxuat = new JButton("Đăng xuất");
		btndangxuat.setBackground(Color.GREEN);
		btndangxuat.setIcon(new ImageIcon("C:\\Users\\Administrator\\Downloads\\DoAnChat\\DoAnChat\\image\\logout.png"));
		btndangxuat.setFont(new Font("Tahoma", Font.BOLD, 20));
		btndangxuat.setBounds(10, 11, 184, 43);
		contentPane.add(btndangxuat);
		
		JLabel password = new JLabel("Password :");
		password.setFont(new Font("Tahoma", Font.BOLD, 20));
		password.setBounds(102, 205, 115, 30);
		contentPane.add(password);
		
		JLabel icondangnhap = new JLabel("");
		icondangnhap.setIcon(new ImageIcon("C:\\Users\\Administrator\\Downloads\\DoAnChat\\DoAnChat\\image\\login (1).png"));
		icondangnhap.setBounds(265, 44, 69, 69);
		contentPane.add(icondangnhap);
				
		btndangxuat.addActionListener(new ActionListener(){

			@Override
			public void actionPerformed(ActionEvent e) {
				// TODO Auto-generated method stub
				int hoi = JOptionPane.showConfirmDialog(null, "Bạn có muốn thoát chương trình không?", null,
						JOptionPane.YES_NO_OPTION);
				if (hoi == JOptionPane.YES_OPTION) {
				dispose();
				}
			}
			
			
		});
	}
	public void actionPerformed(ActionEvent e) {
		
		if (e.getActionCommand().equals("Login")) {
			String usename = txtuser.getText();
			String pasword = getMd5(txtpass);
			try {
				while(rs.next()) {
					String username = rs.getString(1);
					String password = rs.getString(2);
					if(username.equals(usename) && password.equals(pasword)) {
						try {
							JOptionPane.showMessageDialog(null, "Login success");
							System.out.println("Your Password generated by MD5 is: " + getMd5(txtpass));
							serverGUI gd = new serverGUI();
							gd.setVisible(true);
							dispose();
						}catch (Exception e1) {
							// TODO: handle exception
							e1.printStackTrace();
						}
					 
					}else {
						JOptionPane.showMessageDialog(null,
								"Mật khẩu và tên đăng nhập không đúng. Vui lòng thử lại sau");
					}
				}
			}
		
			catch (SQLException e1) {
				// TODO Auto-generated catch block
				e1.printStackTrace();
			}
			
		}
		if (e.getActionCommand().equals("Cancel")) {
			JOptionPane.showMessageDialog(null, "Bạn hãy đăng nhập để sử dụng");

			}
		}

//	public void actionPerformed1(ActionEvent e) {
//        logID = txtuser.getText( );
//        logPW = new String(txtpass.getPassword());
//        }
	public static String getMd5(JPasswordField txtpass) 
    { 
        try { 
            // Static getInstance method is called with hashing MD5 
            MessageDigest md = MessageDigest.getInstance("MD5"); 
  
            // digest() method is called to calculate message digest 
            //  of an input digest() return array of byte 
            byte[] messageDigest = md.digest(); 
  

            BigInteger no = new BigInteger(1, messageDigest); 
  
            // Convert message digest into hex value 
            String hashtext = no.toString(16); 
            while (hashtext.length() < 32) { 
                hashtext = "0" + hashtext; 
            } 
            return hashtext; 
        }  
        // For specifying wrong message digest algorithms 
        catch (NoSuchAlgorithmException e) { 
            throw new RuntimeException(e); 
        } 
    }
	 public static Connection getConnection(String dbURL, String userName, 
	            String password) {
	        Connection conn = null;
	        try {
	            Class.forName("com.mysql.cj.jdbc.Driver");
	            conn = DriverManager.getConnection(dbURL, userName, password);
	            System.out.println("connect successfully!");
	        } catch (Exception ex) {
	            System.out.println("connect failure!");
	            ex.printStackTrace();
	        }
	        return conn;
	    }
}
